# SPDX-FileCopyrightText: 2025, Yaskawa America, Inc.
# SPDX-FileCopyrightText: 2025, Delft University of Technology
#
# SPDX-License-Identifier: Apache-2.0

# Enable the robot and activate the real-time streaming interface. This activates
# a UDP server which listens on port 8889 (default) for a connection from an
# external PC. The robot will accept positional increments from the remote PC
# at the rate returned by this service. Please note that the streaming data is not
# a ROS2 message, but a raw UDP connection which follows the protocol described in
# `https://github.com/Yaskawa-Global/motoros2/tree/main/doc/rt_control.md`. 
#
# It is recommended to monitor the 'robot_status' topic prior to invoking this
# service. This service can only succeed if 'mode' == AUTO, 'e_stopped' == FALSE,
# and 'in_error' == FALSE. If there is an active error, it should be cleared with
# the 'reset_error' service.
#
# If this service is successful, the returned 'result_code' will indicate 'READY'.

# Joints or Cartesian
ControlModeEnum control_mode

---
# Result of the service invocation. Values other than one (1) signal failure.
#
# Refer to MotionReadyEnum.msg for defined values
#
# NOTE: future versions of this service may use a different set of result codes
MotionReadyEnum result_code

# String representation of the value in 'result_code', for humans
string message

# ------------------
# CONFIGURATION INFO
# ------------------

# This period defines the rate at which motion increments will be accepted. 
# (milliseconds). This is controlled by the number of axes connected to the
# robot controller.
uint16 period

# Timeout for real time motion commands. If a command packet is not received
# within this number of milliseconds, the motion mode will be cancelled.
#
# Additionally, if the client does not receive a reply packet within this
# amount of time, then it should be assumed that the session is dead.
#
# The default for this timeout is 30 seconds. It can be modified in the 
# motoros2_config.yaml configuration file.
int32 timeout_for_rt_msg

# Each command packet must increment the sequence ID. If too many packets
# are lost during communication, then it will be assumed that the PC is not
# in sync with the robot.
#
# If the sequence ID of an incoming packet is different from the previous
# command by a value greater than this, then the connection will be dropped.
# The motion mode must be reactivated to be used again. The default for this
# is 10. It can be modified in the motoros2_config.yaml configuration file.
int32 max_sequence_diff_for_rt_msg
